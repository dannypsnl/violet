module Test

data Bool
| True
| False
;
data Nat
| zero
| suc Nat
;

let id : (A : U) -> (_ : A) -> A = \ A x => x;

let zero? : Nat â†’ Bool =
\n => elim n
| zero => True
| suc _ => False
;

let main : Nat = id Nat $ id Nat (suc zero);
